# Generated by Django 4.2.6 on 2023-10-18 14:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('gestao_escolar', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlunoTransporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utiliza_transporte_escolar', models.BooleanField()),
                ('poder_responsavel', models.CharField(blank=True, choices=[('MUNICIPAL', 'Municipal'), ('ESTADUAL', 'Estadual')], max_length=9, null=True)),
                ('cadeirante', models.BooleanField(blank=True, default=False, null=True)),
                ('area_de_risco', models.BooleanField(blank=True, default=False, null=True)),
                ('transporte_rodoviario', models.CharField(blank=True, choices=[('BICICLETA', 'Bicicleta'), ('TRACAO_ANIMAL', 'Tração animal'), ('ONIBUS', 'Ônibus'), ('MICRO_ONIBUS', 'Micro ônibus'), ('VAN_KOMBI', 'Van ou Kombi'), ('OUTRO', 'Outro')], max_length=13, null=True)),
                ('transporte_aquaviario', models.CharField(blank=True, choices=[('BARCO_5_ALUNOS', 'Embarcação para até 5 alunos'), ('BARCO_15_ALUNOS', 'Embarcação para até 15 alunos'), ('BARCO_35_ALUNOS', 'Embarcação para até 35 alunos'), ('BARCO_MAIS_DE_35', 'Embarcação para mais de 35 alunos')], max_length=16, null=True)),
                ('aluno', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transporte', to='gestao_escolar.aluno')),
            ],
            options={
                'verbose_name': 'Dados de transporte de aluno',
                'verbose_name_plural': 'Dados de transporte de alunos',
                'db_table': 'aluno_transporte',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AlunoSaude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_sanguineo', models.CharField(blank=True, choices=[('A_POSITIVO', 'A Positivo'), ('A_NEGATIVO', 'A Negativo'), ('B_POSITIVO', 'B Positivo'), ('B_NEGATIVO', 'B Negativo'), ('AB_POSITIVO', 'AB Positivo'), ('AB_NEGATIVO', 'AB Negativo'), ('O_POSITIVO', 'O Positivo'), ('O_NEGATIVO', 'O Negativo')], max_length=11, null=True)),
                ('problema_de_saude', models.TextField(blank=True, max_length=300, null=True)),
                ('tratamento_com_medicacao', models.TextField(blank=True, max_length=300, null=True)),
                ('medico_responsavel', models.CharField(blank=True, max_length=50, null=True)),
                ('alergia_medicamento', models.TextField(blank=True, max_length=300, null=True)),
                ('alergia_alimentar', models.TextField(blank=True, max_length=300, null=True)),
                ('escolarizacao_domicilio', models.BooleanField(blank=True, default=False, null=True)),
                ('escolarizacao_hospital', models.BooleanField(blank=True, default=False, null=True)),
                ('acompanhamento_fonoaudiologo', models.BooleanField(blank=True, default=False, null=True)),
                ('acompanhamento_psicologo', models.BooleanField(blank=True, default=False, null=True)),
                ('acompanhamento_apae', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_tdah', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_autismo', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_dislexia', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_dispraxia', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_superdotacao', models.BooleanField(blank=True, default=False, null=True)),
                ('outro_transtorno_neuro', models.CharField(blank=True, max_length=50, null=True)),
                ('tem_ansiedade', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_esquizofrenia', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_depressao', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_sindrome_do_panico', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_transtorno_bipolar', models.BooleanField(blank=True, default=False, null=True)),
                ('outro_transtorno_mental', models.CharField(blank=True, max_length=50, null=True)),
                ('tem_baixa_visao', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_cegueira', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_impedimento_fala', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_surdez', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_deficiencia_auditiva', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_deficiencia_fisica', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_deficiencia_intelectual', models.BooleanField(blank=True, default=False, null=True)),
                ('tem_deficiencia_multipla', models.BooleanField(blank=True, default=False, null=True)),
                ('aluno', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='saude', to='gestao_escolar.aluno')),
            ],
            options={
                'verbose_name': 'Dados de saúde de aluno',
                'verbose_name_plural': 'Dados de sáude de alunos',
                'db_table': 'aluno_saude',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AlunoAssistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recurso_ledor', models.BooleanField(blank=True, default=False, null=True)),
                ('recurso_transcricao', models.BooleanField(blank=True, default=False, null=True)),
                ('recurso_interprete', models.BooleanField(blank=True, default=False, null=True)),
                ('recurso_prova_fonte_18', models.BooleanField(blank=True, default=False, null=True)),
                ('recurso_prova_fonte_24', models.BooleanField(blank=True, default=False, null=True)),
                ('recurso_cd_com_audio', models.BooleanField(blank=True, default=False, null=True)),
                ('recurso_material_braille', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_funcoes_cognitivas', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_vida_autonoma', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_enriquecimento_curricular', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_libras', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_informatica_acessivel', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_portugues_segunda_lingua', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_calculo_soroban', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_braille', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_orientacao_e_mobile', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_comunicacao_alternativa', models.BooleanField(blank=True, default=False, null=True)),
                ('aee_recursos_opticos', models.BooleanField(blank=True, default=False, null=True)),
                ('aluno', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assistencia', to='gestao_escolar.aluno')),
            ],
            options={
                'verbose_name': 'Recursos de assistência do aluno',
                'verbose_name_plural': 'Recursos de assistência de alunos',
                'db_table': 'aluno_assistencia',
                'ordering': ['-id'],
            },
        ),
    ]
